# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: # This configuration does not affect the page_build event above
      - created
jobs:
  test:

    runs-on: ubuntu-latest
    container: python:3.9
    environment: CI
    services:
      hapi:
        image: "hapiproject/hapi:latest"
        env:
          hapi.fhir.default_encoding: json
          hapi.fhir.: json
          hapi.fhir.server_address: "http://hapi:8080/fhir"

      blaze:
        image: "samply/blaze:latest"
        env:
          JAVA_TOOL_OPTIONS: "-Xmx2g"
          BASE_URL: "http://blaze:8080"
        volumes:
            - blaze:/app/data
    env:
      FHIR_API_URL: http://blaze:8080/fhir
      TRANSFER_API_URL: http://hapi:8080/fhir


    steps:
      - uses: actions/checkout@v3
#      - name: Set up Python 3.9
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.9
#          cache: "pipenv"
      - run: pip install pipenv
      - run: pipenv install --dev
        name: Install dependencies
#      - uses: nev7n/wait_for_response@v1
#        name: Wait for Blaze to start
#        with:
#          url: 'http://blaze:8080/fhir'
#          responseCode: 200
#          timeout: 2000
#          interval: 500
#      - uses: nev7n/wait_for_response@v1
#        name: Wait for Hapi to start
#        with:
#          url: 'http://hapi:8080/fhir'
#          responseCode: 200
#          timeout: 2000
#          interval: 500
      - name: Prefill servers with data
        run: |
          pipenv run pip install .
          pipenv run pip install requests
          pipenv run python ./testing/prefill.py

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Tests and coverage report
        run: |
          pipenv run coverage run -m pytest tests
          pipenv run coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          name: codecov-umbrella
          verbose: true

      - name: Build and deploy documentation
        run: pipenv run mkdocs gh-deploy --force
